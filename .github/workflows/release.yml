# 可选，将显示在 GitHub 存储库的“操作”选项卡中的工作流名称
name: Release CI

# 指定此工作流的触发器
on:
  push:
    # 匹配特定标签 (refs/tags)
    tags:
      - "v*" # 推送事件匹配 v*, 例如 v1.0，v20.15.10 等来触发工作流

# 需要运行的作业组合
jobs:
  # 任务：创建 release 版本
  create-release:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_UPLOAD_ID: ${{ steps.create_release.outputs.id }}

    steps:
      - name: Checkout public repository
        uses: actions/checkout@v3
        # with:
        #   repository: TestDesktopGithubActions/desktop_release
        # path: another_public_repo

      # - name: Get tag name from ref
      #   shell: bash
      #   run: echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"
      #   id: get_tag
      # - name: Create tag in public repository
      #   run: |
      #     cd ${{github.workspace}}/desktop_release
      #     git tag ${{ steps.get_tag.outputs.tag }}
      #     git push --tags --porcelain
      # 根据查询到的版本号创建 release
      - name: Create Release
        id: create_release
        # uses: actions/create-release@v1.1.4
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # GITHUB_REPOSITORY: ram-flux/desktop_release
        with:
          body: "See the assets to download this version and install."

        # uses: actions/create-release@v1
        # env:
        #   GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }} # A personal access token
        # with:
        #   # tag_name: ${{ steps.get_tag.outputs.tag }}
        #   # release_name: Release ${{ steps.get_tag.outputs.tag }}
        #   tag_name: ${{ github.ref }}
        #   release_name: Release ${{ github.ref }}
        #   draft: false
        #   prerelease: false
        #   owner: TestDesktopGithubActions
        #   repo: desktop_release

      # - name: Run Clone action
      #   uses: andrewthetechie/gha-clone-releases@v1
      #   with:
      #     token: ${{ secrets.PERSONAL_TOKEN }}
      #     src_repo: TestDesktopGithubActions/test_desktop_github_actions
      #     dest_repo: TestDesktopGithubActions/desktop_release
      #     copy_assets: true
  # 生成静态资源并将其推送到 github pages
  updater:
    runs-on: ubuntu-latest
    needs: [create-release]

    steps:
      - name: Create API SSH private key file
        # run: echo "$API_PRIVATE_KEY" > ~/.ssh/id_rsa
        run: |
          mkdir -p $HOME/.ssh  # 创建 .ssh 目录
          echo "${{ secrets.API_PRIVATE_KEY }}" > $HOME/.ssh/api_id_rsa
          chmod 600 $HOME/.ssh/api_id_rsa  # 设置私钥文件权限
        env:
          API_PRIVATE_KEY: ${{ secrets.API_PRIVATE_KEY }}

      - name: Print api_id_rsa content
        run: cat $HOME/.ssh/api_id_rsa

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: yarn install

      - name: Add development dependencies
        run: yarn add -D node-fetch @actions/github

      - name: Install ssh2 package
        run: yarn add ssh2

      - name: Create GH_TOKEN file
        run: |
          echo "${{ secrets.GH_TOKEN }}" > $HOME/gh_token.txt
          chmod 600 $HOME/gh_token.txt  # 设置文件权限
        # env:
        #   GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Run publish script
        run: yarn publisher
        env:
          # GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        # shell: bash
        # run: $GITHUB_ACTION_PATH/scripts/publish.sh

      - name: Run updater script
        run: yarn updater
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          API_PRIVATE_KEY: ${{ secrets.API_PRIVATE_KEY }}
          PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
          BOSS_LOGIN_BODY: ${{ secrets.BOSS_LOGIN_BODY }}

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.PERSONAL_TOKEN }}
          # external_repository: QuantumCat-957/QuantumCat-957.github.io
          external_repository: ram-flux/ram-flux.github.io
          publish_branch: main # default: gh-pages
          publish_dir: ./updater
          force_orphan: true
        env:
          PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
